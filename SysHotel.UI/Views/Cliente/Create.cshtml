@model SysHotel.EL.Cliente

@{
    ViewBag.Title = "Crear Cliente";
}
<div class="row">
    <div class="col s12 m6">
        <h4>Agregar nuevo cliente</h4>
        @if (ViewBag.Message != null)
        {
            string clase = "";
            switch (ViewBag.Message)
            {
                case "Ocurrió un error crítico, no fué posible guardar el nuevo cliente.":
                    clase = "alert-danger";
                    break;

                case "El número del DUI no debe tener letras ni guiones.":
                    clase = "alert-error";
                    break;
                case "DUI inválido.":
                    clase = "alert-error";
                    break;
                case "Entrada de DUI incorrecta.":
                    clase = "alert-error";
                    break;
                case "El cliente ya está registrado.":
                    clase = "alert-warning";
                    break;
                case "Datos incompletos.":
                    clase = "alert-error";
                    break;
                case "Información incompleta.":
                    clase = "alert-info";
                    break;
            }
            <div id="closeAlertLogin" class=@clase> <strong>@ViewBag.Message</strong><span onclick="closeAlertFunction( );" class="right spanClose">&#10060;</span></div>
        }
        <br />
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <h5>Información acerca del nuevo cliente</h5>
            <br />
            @Html.ValidationSummary(true, "", new { @class = "redText" })
            <div class="input-field">
                @Html.LabelFor(model => model.Nombres, htmlAttributes: new { @class = "" })
                @Html.EditorFor(model => model.Nombres, new { htmlAttributes = new { @class = "validate" } })
                @Html.ValidationMessageFor(model => model.Nombres, "", new { @class = "redText" })
            </div>

            <div class="input-field">
                @Html.LabelFor(model => model.Apellidos, htmlAttributes: new { @class = "" })
                @Html.EditorFor(model => model.Apellidos, new { htmlAttributes = new { @class = "validate" } })
                @Html.ValidationMessageFor(model => model.Apellidos, "", new { @class = "redText" })
            </div>
            <div>
                @Html.LabelFor(model => model.FechaNacimiento, htmlAttributes: new { @class = "" })
                @Html.EditorFor(model => model.FechaNacimiento, new { htmlAttributes = new { @class = "validate" } })
                @Html.ValidationMessageFor(model => model.FechaNacimiento, "", new { @class = "redText" })
            </div>
            <div class="dropdownList">
                 @Html.LabelFor(model => model.TipoDocumento, htmlAttributes: new { @class = "" })
                 @Html.DropDownList("TipoDocumento", null, htmlAttributes: new { @class = "dropdownList" })
                 @Html.ValidationMessageFor(model => model.TipoDocumento, "", new { @class = "redText" })
              
            </div>
            <div class="input-field">
                @Html.LabelFor(model => model.NumeroDocumento, htmlAttributes: new { @class = "" })
                @Html.EditorFor(model => model.NumeroDocumento, new { htmlAttributes = new { @class = "validate" } })
                @Html.ValidationMessageFor(model => model.NumeroDocumento, "", new { @class = "redText" })
            </div>
            <div class="input-field">
                @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "" })
                @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "validate" } })
                @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "redText" })
            </div>
            <div class="input-field">
                @Html.LabelFor(model => model.Correo, htmlAttributes: new { @class = "" })
                @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "validate" } })
                @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "redText" })
            </div>
            <div class="input-field">
                @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "" })
                @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "validate" } })
                @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "redText" })
            </div>
            <br />
            <div class="right">
                <button type="submit" class="btn waves-effect waves-light white-text">Agregar</button>
            </div>
            <br />
        }
        <br />
        <div>
            <i class="material-icons">undo</i> @Html.ActionLink("Regresar a la lista", "Index")
        </div>
        <br />
    </div>
    <div class="col s12 m6">

    </div>
</div>