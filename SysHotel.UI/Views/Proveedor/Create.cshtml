@model SysHotel.EL.Proveedor

@{
    ViewBag.Title = "Nuevo proveedor";
}
<div class="row">
    <div class="col s12 m6">
        <h4>Agregar nuevo proveedor</h4>
        @if (ViewBag.Message != null)
        {
            string clase = "";
            switch (ViewBag.Message)
            {
                case "Ocurrió un error crítico, no fué posible guardar el proveedor.":
                    clase = "alert-danger";
                    break;

                case "El proveedor ya existe.":
                    clase = "alert-warning";
                    break;
                case "Datos incompletos.":
                    clase = "alert-error";
                    break;
                case "Información incompleta.":
                    clase = "alert-info";
                    break;
            }
            <div id="closeAlertLogin" class=@clase> <strong>@ViewBag.Message</strong><span onclick="closeAlertFunction( );" class="right spanClose">&#10060;</span></div>
        }
        <br />
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <h5>Información del nuevo proveedor</h5>
            <br />
            @Html.ValidationSummary(true, "", new { @class = "redText" })
            <div class="input-field">
                @Html.LabelFor(model => model.NombreEmpresa, htmlAttributes: new { @class = "" })
                @Html.EditorFor(model => model.NombreEmpresa, new { htmlAttributes = new { @class = "validate" } })
                @Html.ValidationMessageFor(model => model.NombreEmpresa, "", new { @class = "red-text" })

            </div>

            <div class="input-field">
                @Html.LabelFor(model => model.Ubicacion, htmlAttributes: new { @class = "" })
                @Html.EditorFor(model => model.Ubicacion, new { htmlAttributes = new { @class = "validate" } })
                @Html.ValidationMessageFor(model => model.Ubicacion, "", new { @class = "red-text" })
                
            </div>

            <div class="input-field">
                @Html.LabelFor(model => model.Encargado, htmlAttributes: new { @class = "" })
                @Html.EditorFor(model => model.Encargado, new { htmlAttributes = new { @class = "validate" } })
                @Html.ValidationMessageFor(model => model.Encargado, "", new { @class = "red-text" })
               
            </div>

            <div class="input-field">
                @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "" })
                @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "validate" } })
                @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "red-text" })
              
            </div>

            <div class="input-field">
                @Html.LabelFor(model => model.Correo, htmlAttributes: new { @class = "" })
                @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "validate" } })
                @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "red-text" })
                
            </div>
          
            <br />
            <div class="right">
                <button type="submit" class="btn waves-effect waves-light white-text">Agregar</button>
            </div>
            <br />
        }
        <br />
        <div>
            <i class="material-icons">undo</i> @Html.ActionLink("Regresar a la lista", "Index")
        </div>
        <br />
    </div>
    <div class="col s12 m6">
        <h6 class="relleno indigo lighten-5">Estos son los últimos 10 proveedores ingresados.</h6>
        @{
            int x = 0;
            int y = 1;
            string elemApertura = "<div class='row'>";
            string elemCierre = "</div>";

            var viewDataCategoria = ViewData["Proveedores"] as IList<SysHotel.EL.Proveedor>;
            foreach (var item in viewDataCategoria)
            {
                x++;
                if (x == y)
                {
                    @Html.Raw(elemApertura);@*Se convierte el string en una etiqueta html*@
                    <div class="col s6">
                        <div class="card">
                            <div class="card-content" style="height:200px;overflow:auto;">
                                <b>Empresa: </b>
                                @item.NombreEmpresa<br />
                                <b>Encargado: </b>
                                @item.Encargado<br />
                                <b>Teléfono: </b>
                                @item.Telefono
                            </div>
                        </div>
                    </div>
                    y += 2;/*Aqui se indica cuantas tarjetas mostrar por fila*/
                }
                else
                {
                    <div class="col s6">
                        <div class="card">
                            <div class="card-content" style="height:200px;overflow:auto;">
                                <b>Empresa: </b>
                                @item.NombreEmpresa<br />
                                <b>Encargado: </b>
                                @item.Encargado<br />
                                <b>Teléfono: </b>
                                @item.Telefono
                            </div>
                        </div>
                    </div>
                }
                if (x == y - 1)
                {
                    @Html.Raw(elemCierre)
                }
                if (x == viewDataCategoria.Count())
                {
                    @Html.Raw(elemCierre)
                }
            }
        }
    </div>
</div>

