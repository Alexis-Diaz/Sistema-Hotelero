@model SysHotel.EL.View.AlimentoView

@{
    ViewBag.Title = "Agregar alimento";
}
<div class="row">
    <div class="col s12 m6">
        <h4>Agregar nuevo alimento</h4>
        @if (ViewBag.Message != null)
        {
            string clase = "";
            switch (ViewBag.Message)
            {
                case "Ocurrió un error crítico, no fué posible guardar el nuevo alimento.":
                    clase = "alert-danger";
                    break;
                case "El alimento ya existe.":
                    clase = "alert-warning";
                    break;
                case "Datos incompletos.":
                    clase = "alert-error";
                    break;
                case "Información incompleta.":
                    clase = "alert-info";
                    break;
            }
            <div id="closeAlertLogin" class=@clase> <strong>@ViewBag.Message</strong><span onclick="closeAlertFunction( );" class="right spanClose">&#10060;</span></div>
        }
        <br />
        @using (Html.BeginForm("Create", "Alimento", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <h5>Características del nuevo alimento</h5>
            <br />
            @Html.ValidationSummary(true, "", new { @class = "redText" })
            <div class="input-field">
                @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "" })
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "validate" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "redText" })
            </div>

                @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "" })
                @Html.TextAreaFor(model => model.Descripcion, htmlAttributes: new { @class = "validate" })
                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "redText" })
       
            <div class="input-field">
                @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "" })
                @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "validate" } })
                @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "redText" })
            </div>
            <br />
            <div>
                @Html.LabelFor(model => model.Foto, htmlAttributes: new { @class = "" })
                @Html.TextBoxFor(model => model.Foto, new { type = "file"})
            </div>
            <br />
            <br />
            <div class="dropdownList">
                @Html.LabelFor(model => model.IdCategoriaAlimento, htmlAttributes: new { @class = "" })
                @Html.DropDownList("IdCategoriaAlimento", null, htmlAttributes: new { @class = "validate" })
                @Html.ValidationMessageFor(model => model.IdCategoriaAlimento, "", new { @class = "redtext" })
            </div>
            <br />
            <br />
            <div class="dropdownList">
                @Html.LabelFor(model => model.IdProveedor, htmlAttributes: new { @class = "" })
                @Html.DropDownList("IdProveedor", null, htmlAttributes: new { @class = "validate" })
                @Html.ValidationMessageFor(model => model.IdProveedor, "", new { @class = "redtext" })
            </div>
            <br />
            <br />
            <div class="right">
                <button type="submit" class="btn waves-effect waves-light white-text">Agregar</button>
            </div>
            <br />
        }
        <br />
        <div>
            <i class="material-icons">undo</i> @Html.ActionLink("Regresar a la lista", "Index")
        </div>
        <br />
    </div>
    <div class="col s12 m6">

    </div>

</div>

@section scripts{
<script>
    M.AutoInit();
</script>    
}