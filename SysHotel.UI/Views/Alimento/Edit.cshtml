@model SysHotel.EL.View.AlimentoView

@{
    ViewBag.Title = "Editar alimento";
}

<div class="row">
    <div class="col s6">
        <h4><i class="material-icons">edit</i>Editar alimento</h4>
        @if (ViewBag.Message != null)
        {
            string clase = "";
            switch (ViewBag.Message)
            {
                case "Ocurrió un error, el cambio no fué posible salvarlo.":
                    clase = "alert-danger";
                    break;

                case "No se han hecho cambios.":
                    clase = "alert-info";
                    break;
                case "Ya existe un alimento con el mismo nombre.":
                    clase = "alert-warning";
                    break;
                case "Datos incompletos.":
                    clase = "alert-error";
                    break;
                case "Información incompleta.":
                    clase = "alert-info";
                    break;
            }
            <div id="closeAlertLogin" class=@clase> <strong>@ViewBag.Message</strong><span onclick="closeAlertFunction( );" class="right spanClose">&#10060;</span></div>
        }
        <br />
        @using (Html.BeginForm("Edit", "Alimento", FormMethod.Post, new { enctype = "multipart/form-data"}))
        {
            @Html.AntiForgeryToken()
            <div class="l">
                <h5>Detalles del alimento</h5>
                <br />
                @Html.ValidationSummary(true, "", new { @class = "red-text" })
                @Html.HiddenFor(model => model.IdAlimento)
                @Html.HiddenFor(model => model.Imagen)
                @Html.HiddenFor(model => model.Estado)

                <div class="input-field">
                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "" })
                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "validate" } })
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "red-text" })
                </div>

                 <div class="input-field">
                    @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "" })
                    @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "validate" } })
                    @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "red-text" })
                </div>
                 <div class="dropdownList">
                    @Html.LabelFor(model => model.IdCategoriaAlimento, htmlAttributes: new { @class = "" })
                    @Html.DropDownList("IdCategoriaAlimento",null, htmlAttributes: new { @class = "validate" } )
                    @Html.ValidationMessageFor(model => model.IdCategoriaAlimento, "", new { @class = "red-text" })
                </div>
                 <div class="dropdownList">
                    @Html.LabelFor(model => model.IdProveedor, htmlAttributes: new { @class = "" })
                    @Html.DropDownList("IdProveedor",null, htmlAttributes: new { @class = "validate" })
                    @Html.ValidationMessageFor(model => model.IdProveedor, "", new { @class = "red-text" })
                </div>
                 <div>
                     <strong>Imagen actual</strong><br />
                     @if (!string.IsNullOrEmpty(Model.Imagen))
                     {
                         <img src="@Url.Content(Model.Imagen)" />
                     }
                     else
                     {
                         <img src="~/Content/Img/Alimentos/vacio.jpg"/>
                     }
                 </div>
                 <div class="input-field">
                     <strong>Escoger otra imagen:</strong>
                    @Html.TextBoxFor(model => model.Foto, new { type = "file"})
                   
                </div>
                <br />
                 <div class="input-field">
                    @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "" })
                    @Html.TextAreaFor(model => model.Descripcion, new { htmlAttributes = new { @class = "validate" } })
                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "red-text" })
                </div>

                <div class="right">
                    <button type="submit" class="btn waves-effect waves-light white-text">Guardar cambios</button>
                </div>

            </div>
        }
    </div>
    <div class="col s6">

    </div>
</div>

<div>
    <i class="material-icons">undo</i>@Html.ActionLink("Regresar a la lista", "Index")
</div>
<br />
<br />
@section scripts{
    <script>
        M.AutoInit();
    </script>
} 